{"id":576,"date":"2025-06-03T22:25:46","date_gmt":"2025-06-03T19:25:46","guid":{"rendered":"http:\/\/192.168.1.108\/?p=576"},"modified":"2025-06-03T22:25:46","modified_gmt":"2025-06-03T19:25:46","slug":"optimize-ubuntu-for-mining-boost-performance-and-stability","status":"publish","type":"post","link":"http:\/\/192.168.1.108\/?p=576","title":{"rendered":"&#8220;Optimize Ubuntu for Mining: Boost Performance and Stability&#8221;"},"content":{"rendered":"\r\n<div class=\"mining-post-container\">\r\n  <h2>Optimize Ubuntu for Headless Mining: Boost Performance and Stability<\/h2>\r\n  <div class=\"excerpt\">\r\n    Running a mining rig on Ubuntu without a graphical interface (headless) maximizes system resources, reduces overhead, and improves stability.  \r\n    This tutorial walks you through essential optimizations to prepare Ubuntu Server for efficient, low-latency mining\u2014perfect for CPU and GPU miners alike.\r\n  <\/div>\r\n\r\n  <h3>Requirements<\/h3>\r\n  <ul>\r\n    <li>Ubuntu Server 20.04 or later installed (headless, no GUI)<\/li>\r\n    <li>Basic Linux command-line skills<\/li>\r\n    <li>Root or sudo access<\/li>\r\n    <li>Installed mining software (e.g., XMRig)<\/li>\r\n  <\/ul>\r\n\r\n  <h3>Step 1: Update and Upgrade System<\/h3>\r\n  <p>Always start with the latest updates:<\/p>\r\n  <pre><code>sudo apt update && sudo apt upgrade -y\r\nsudo reboot\r\n<\/code><\/pre>\r\n\r\n  <h3>Step 2: Disable Unnecessary Services<\/h3>\r\n  <p>List running services:<\/p>\r\n  <pre><code>systemctl list-units --type=service --state=running\r\n<\/code><\/pre>\r\n  <p>Disable common resource-heavy or unused services (adjust as needed):<\/p>\r\n  <pre><code>sudo systemctl disable snapd.service\r\nsudo systemctl disable cups.service\r\nsudo systemctl disable bluetooth.service\r\nsudo systemctl disable ModemManager.service\r\nsudo systemctl disable whoopsie.service\r\nsudo systemctl disable avahi-daemon.service\r\nsudo systemctl disable NetworkManager.service\r\n<\/code><\/pre>\r\n  <p>Stop these services immediately:<\/p>\r\n  <pre><code>sudo systemctl stop snapd.service cups.service bluetooth.service ModemManager.service whoopsie.service avahi-daemon.service NetworkManager.service\r\n<\/code><\/pre>\r\n\r\n  <h3>Step 3: Enable HugePages for RandomX Mining<\/h3>\r\n  <p>HugePages improve CPU memory management and performance for RandomX-based miners.<\/p>\r\n  <pre><code>echo 'vm.nr_hugepages=128' | sudo tee -a \/etc\/sysctl.conf\r\nsudo sysctl -p\r\n<\/code><\/pre>\r\n  <p>Verify:<\/p>\r\n  <pre><code>grep Huge \/proc\/meminfo\r\n<\/code><\/pre>\r\n\r\n  <h3>Step 4: Set CPU Governor to Performance<\/h3>\r\n  <p>Set all CPUs to performance mode to prevent scaling delays:<\/p>\r\n  <pre><code>sudo apt install cpufrequtils -y\r\nsudo cpufreq-set -r -g performance\r\n<\/code><\/pre>\r\n  <p>Make persistent by adding to <code>\/etc\/rc.local<\/code> before <code>exit 0<\/code>:<\/p>\r\n  <pre><code>cpufreq-set -r -g performance\r\n<\/code><\/pre>\r\n\r\n  <h3>Step 5: Configure Miner Autostart<\/h3>\r\n  <p>Create a systemd service to start your miner on boot:<\/p>\r\n  <pre><code>sudo nano \/etc\/systemd\/system\/xmrig.service\r\n<\/code><\/pre>\r\n  <p>Add the following (adjust ExecStart path and args as needed):<\/p>\r\n  <pre><code>[Unit]\r\nDescription=XMRig Miner\r\nAfter=network.target\r\n\r\n[Service]\r\nExecStart=\/usr\/local\/bin\/xmrig --config=\/etc\/xmrig\/config.json\r\nRestart=always\r\nNice=10\r\nCPUWeight=90\r\n\r\n[Install]\r\nWantedBy=multi-user.target\r\n<\/code><\/pre>\r\n  <p>Enable and start the service:<\/p>\r\n  <pre><code>sudo systemctl daemon-reload\r\nsudo systemctl enable xmrig.service\r\nsudo systemctl start xmrig.service\r\n<\/code><\/pre>\r\n\r\n  <h3>Step 6: Tune Kernel Parameters for Network and File Handles<\/h3>\r\n  <p>Edit <code>\/etc\/sysctl.conf<\/code> to add these lines for better networking and file handling:<\/p>\r\n  <pre><code>sudo nano \/etc\/sysctl.conf\r\n<\/code><\/pre>\r\n  <p>Add at the end:<\/p>\r\n  <pre><code>net.core.somaxconn=1024\r\nnet.ipv4.tcp_tw_reuse=1\r\nfs.file-max=100000\r\n<\/code><\/pre>\r\n  <p>Apply changes:<\/p>\r\n  <pre><code>sudo sysctl -p\r\n<\/code><\/pre>\r\n\r\n  <h3>Step 7: Increase File Descriptor Limits<\/h3>\r\n  <p>Edit limits configuration:<\/p>\r\n  <pre><code>sudo nano \/etc\/security\/limits.conf\r\n<\/code><\/pre>\r\n  <p>Add these lines:<\/p>\r\n  <pre><code>* soft nofile 100000\r\n* hard nofile 100000\r\n<\/code><\/pre>\r\n  <p>Also update PAM limits by editing <code>\/etc\/pam.d\/common-session*<\/code> and adding:<\/p>\r\n  <pre><code>session required pam_limits.so\r\n<\/code><\/pre>\r\n\r\n  <h3>Step 8: Optional &#8211; Use a Minimal Kernel (for advanced users)<\/h3>\r\n  <p>Compile a custom kernel without unnecessary modules or use distros like Ubuntu Minimal to reduce bloat.<\/p>\r\n\r\n  <h3>Troubleshooting &#038; Tips<\/h3>\r\n  <ul>\r\n    <li>Monitor miner logs: <code>journalctl -u xmrig.service -f<\/code><\/li>\r\n    <li>Check CPU frequency scaling with: <code>cpufreq-info<\/code><\/li>\r\n    <li>Use <code>htop<\/code> to verify CPU and memory usage.<\/li>\r\n    <li>Keep your miner updated for latest performance patches.<\/li>\r\n  <\/ul>\r\n\r\n  <h3>Conclusion<\/h3>\r\n  <p>\r\n    With these optimizations, your Ubuntu server will run your mining software efficiently, using less power and maximizing uptime. Perfect for dedicated rigs or VPS setups.\r\n  <\/p>\r\n<\/div>\r\n\r\n<!-- templates\/buttons-placeholder.php -->\n<div class=\"da-reactions-outer TpostID576\">\n\t    <div class=\"da-reactions-data da-reactions-container-async center\"\n         data-type=\"post\"\n         data-id=\"576\"\n         id=\"da-reactions-slot-post-576\">\n        <div class=\"da-reactions-exposed\">\n\t\t\t<img src=\"http:\/\/192.168.1.108\/wp-content\/plugins\/da-reactions\/assets\/dist\/loading.svg\" alt=\"Loading spinner\" width=\"64\" height=\"64\" style=\"width:64px\" \/>\n        <\/div>\n    <\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>Optimize Ubuntu for Headless Mining: Boost Performance and Stability Running a mining rig on Ubuntu without a graphical interface (headless) maximizes system resources, reduces overhead, and improves stability. This tutorial walks you through essential optimizations to prepare Ubuntu Server for efficient, low-latency mining\u2014perfect for CPU and GPU miners alike. Requirements Ubuntu Server 20.04 or later installed (headless, no GUI) Basic Linux command-line skills Root or sudo access Installed mining software (e.g., XMRig) Step 1: Update and Upgrade System Always start with the latest updates: sudo apt update &#038;&#038; sudo apt upgrade -y sudo reboot Step 2: Disable Unnecessary Services List running services: systemctl list-units &#8211;type=service &#8211;state=running Disable common resource-heavy or unused services (adjust as needed): sudo systemctl disable snapd.service sudo systemctl disable cups.service sudo systemctl disable bluetooth.service sudo systemctl disable ModemManager.service sudo systemctl disable whoopsie.service sudo systemctl disable avahi-daemon.service sudo systemctl disable NetworkManager.service Stop these services immediately: sudo systemctl stop snapd.service cups.service bluetooth.service ModemManager.service whoopsie.service avahi-daemon.service NetworkManager.service Step 3: Enable HugePages for RandomX Mining HugePages improve CPU memory management and performance for RandomX-based miners. echo &#8216;vm.nr_hugepages=128&#8217; | sudo tee -a \/etc\/sysctl.conf sudo sysctl -p Verify: grep Huge \/proc\/meminfo Step 4: Set CPU Governor to Performance Set all CPUs to performance mode to prevent scaling delays: sudo apt install cpufrequtils -y sudo cpufreq-set -r -g performance Make persistent by adding to \/etc\/rc.local before exit 0: cpufreq-set -r -g performance Step 5: Configure Miner Autostart Create a systemd service to start your miner on boot: sudo nano \/etc\/systemd\/system\/xmrig.service Add the following (adjust ExecStart path and args as needed): [Unit] Description=XMRig Miner After=network.target [Service] ExecStart=\/usr\/local\/bin\/xmrig &#8211;config=\/etc\/xmrig\/config.json Restart=always Nice=10 CPUWeight=90 [Install] WantedBy=multi-user.target Enable and start the service: sudo systemctl daemon-reload sudo systemctl enable xmrig.service sudo systemctl start xmrig.service Step 6: Tune Kernel Parameters for Network and File Handles Edit \/etc\/sysctl.conf to add these lines for better networking and file handling: sudo nano \/etc\/sysctl.conf Add at the end: net.core.somaxconn=1024 net.ipv4.tcp_tw_reuse=1 fs.file-max=100000 Apply changes: sudo sysctl -p Step 7: Increase File Descriptor Limits Edit limits configuration: sudo nano \/etc\/security\/limits.conf Add these lines: * soft nofile 100000 * hard nofile 100000 Also update PAM limits by editing \/etc\/pam.d\/common-session* and adding: session required pam_limits.so Step 8: Optional &#8211; Use a Minimal Kernel (for advanced users) Compile a custom kernel without unnecessary modules or use distros like Ubuntu Minimal to reduce bloat. Troubleshooting &#038; Tips Monitor miner logs: journalctl -u xmrig.service -f Check CPU frequency scaling with: cpufreq-info Use htop to verify CPU and memory usage. Keep your miner updated for latest performance patches. Conclusion With these optimizations, your Ubuntu server will run your mining software efficiently, using less power and maximizing uptime. Perfect for dedicated rigs or VPS setups.<\/p>\n<!-- templates\/buttons-placeholder.php -->\n<div class=\"da-reactions-outer TpostID576\">\n\t    <div class=\"da-reactions-data da-reactions-container-async center\"\n         data-type=\"post\"\n         data-id=\"576\"\n         id=\"da-reactions-slot-post-576\">\n        <div class=\"da-reactions-exposed\">\n\t\t\t<img src=\"http:\/\/192.168.1.108\/wp-content\/plugins\/da-reactions\/assets\/dist\/loading.svg\" alt=\"Loading spinner\" width=\"64\" height=\"64\" style=\"width:64px\" \/>\n        <\/div>\n    <\/div>\n<\/div>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"footnotes":""},"categories":[9,8],"tags":[],"class_list":["post-576","post","type-post","status-publish","format-standard","hentry","category-low-power-mining","category-performance-tuning"],"rttpg_featured_image_url":null,"rttpg_author":{"display_name":"anon","author_link":"http:\/\/192.168.1.108\/?author=1"},"rttpg_comment":0,"rttpg_category":"<a href=\"http:\/\/192.168.1.108\/?cat=9\" rel=\"category\">Low-Power Mining<\/a> <a href=\"http:\/\/192.168.1.108\/?cat=8\" rel=\"category\">Performance Tuning<\/a>","rttpg_excerpt":"Optimize Ubuntu for Headless Mining: Boost Performance and Stability Running a mining rig on Ubuntu without a graphical interface (headless) maximizes system resources, reduces overhead, and improves stability. This tutorial walks you through essential optimizations to prepare Ubuntu Server for efficient, low-latency mining\u2014perfect for CPU and GPU miners alike. Requirements Ubuntu Server 20.04 or later&hellip;","_links":{"self":[{"href":"http:\/\/192.168.1.108\/index.php?rest_route=\/wp\/v2\/posts\/576","targetHints":{"allow":["GET"]}}],"collection":[{"href":"http:\/\/192.168.1.108\/index.php?rest_route=\/wp\/v2\/posts"}],"about":[{"href":"http:\/\/192.168.1.108\/index.php?rest_route=\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"http:\/\/192.168.1.108\/index.php?rest_route=\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"http:\/\/192.168.1.108\/index.php?rest_route=%2Fwp%2Fv2%2Fcomments&post=576"}],"version-history":[{"count":1,"href":"http:\/\/192.168.1.108\/index.php?rest_route=\/wp\/v2\/posts\/576\/revisions"}],"predecessor-version":[{"id":577,"href":"http:\/\/192.168.1.108\/index.php?rest_route=\/wp\/v2\/posts\/576\/revisions\/577"}],"wp:attachment":[{"href":"http:\/\/192.168.1.108\/index.php?rest_route=%2Fwp%2Fv2%2Fmedia&parent=576"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"http:\/\/192.168.1.108\/index.php?rest_route=%2Fwp%2Fv2%2Fcategories&post=576"},{"taxonomy":"post_tag","embeddable":true,"href":"http:\/\/192.168.1.108\/index.php?rest_route=%2Fwp%2Fv2%2Ftags&post=576"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}